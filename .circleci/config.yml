version: 2.1
executors:
  docker-publisher:
    working_directory: ~/cci-clojure-saas # directory where steps will run
    environment:
      IMAGE_NAME: ovistoica/clojure-saas-template
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    working_directory: ~/cci-clojure-saas # directory where steps will run
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0-browsers
    environment:
      JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
    steps:
      - checkout
      # This is important as otherwise a :git/url coordinate in your
      # deps.edn fails.
      - run:
          name: Get rid of erroneous git config
          command: |
            rm -rf ~/.gitconfig1
      # Download and cache dependencies
      - restore_cache:
          keys:
            - clojure-saas-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - clojure-saas-
      - run: clojure -T:build uber
      - save_cache:
          paths:
            - ~/.m2
            - ~/.gitlibs
          key: clojure-saas-{{ checksum "deps.edn" }}
      - persist_to_workspace:
          root: ~/cci-clojure-saas
          paths:
            - target
  build-docker:
    executor: docker-publisher
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build latest Docker image
          command: docker build . -t $IMAGE_NAME:latest
      - run:
          name: Build tagged Docker image
          command: docker build . -t $IMAGE_NAME:${CIRCLE_TAG}
      - run:
          name: Archive Docker images
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: ~/cci-clojure-saas
          paths:
            - ./image.tar
  publish-docker:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASS
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:${CIRCLE_TAG}
workflows:
  version: 2.1
  main:
    jobs:
      - build
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build-docker:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-docker:
          requires:
            - build-docker
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/